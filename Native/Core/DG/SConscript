#
# Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
#

import os
Import( 'coreEnv', 'yajlFlags', 'licensesFlags', 'buildOS' )

quoteCString = coreEnv.File('quote-c-string.sed')

uglifyjsOption = '-o'
if buildOS == 'Darwin' or buildOS == 'Linux':
  uglifyjsBin = os.environ['HOME'] + '/node_modules/uglify-js/bin/uglifyjs'
  if not os.path.exists( uglifyjsBin ):
    uglifyjsBin = 'uglifyjs'

  uglifiedWrappers = coreEnv.Command(
    'FABRIC.Wrappers.uglified.js',
    'FABRIC.Wrappers.js',
    [[
      uglifyjsBin,
      uglifyjsOption, '$TARGET',
      '$SOURCE'
    ]]
  )
elif buildOS == 'Windows':
  nodeJSPath = os.environ['NODEJS_PATH'];
  if(nodeJSPath == ''):
    print('ERROR: environment variable NODEJS_PATH is not set, please set it to the path to node.exe')
  uglifyjsBin = 'node.exe'
  uglifyjsModule = nodeJSPath + '\\node_modules\\uglify-js\\bin\\uglifyjs'
  uglifiedWrappers = coreEnv.Command(
    'FABRIC.Wrappers.uglified.js',
    'FABRIC.Wrappers.js',
    [[
      uglifyjsBin, uglifyjsModule,
      uglifyjsOption, '$TARGET',
      '$SOURCE'
    ]]
  )

moreUglifiedWrappers = coreEnv.Command(
  'FABRIC.Wrappers.more.uglified.js',
  uglifiedWrappers,
  [[
    'sed',
    '-e', 's/queueCommand/qc_/g',
    '-e', 's/handleStateNotification/hsn_/g',
    '-e', 's/patch/p_/g',
    '$SOURCE',
    '>$TARGET'
  ]]
)  
wrappersINC = coreEnv.Command(
  'FABRIC.Wrappers.js.inc',
  [moreUglifiedWrappers,quoteCString],
  [[ 'sed', '-f', quoteCString.path, '$SOURCE', '>$TARGET' ]]
)

coreEnv.Depends( 'Context.cpp', wrappersINC )

coreEnv.MergeFlags( yajlFlags )
coreEnv.MergeFlags( licensesFlags )
coreEnv.Prepend( LIBS = coreEnv.StaticLibrary( 'DG', [Glob('*.cpp')] ) )
