Math.Warning: FABRIC.RT.Quat.setFrom2Vectors: bad divisor (ambiguous answer)
Math.Warning: FABRIC.RT.Vec3.divideScalar: bad divisor: 0
[FABRIC] [MT] Math.Warning: Quat.setFromMat33: ambiguous answer: bad divisor: 0
[FABRIC] [MT] Math.Warning: Vec3.divide: bad divisor: 0
'set': [ 1, 2, 3, 4 ]
'setFromAxisAndAngle': [ 0, -0.7071, 0, 0.7071 ]
'rotateVector3': [ 0, 0, 1 ]
'setFromEuler': [ 0.5000, 0.5000, 0.5000, 0.5000 ]
'setFromEuler_rotateVector': [ 0, 1, 0 ]
'setFromEuler_rotateVector2': [ 0, 0, 1 ]
'eulerMat_rotateVector': [ 0, 1, 0 ]
'eulerMat_rotateVector2': [ 0, 0, 1 ]
'setFromMat33_rotateVector': [ 0, 1, 0 ]
'setFromMat33_rotateVector2': [ 0, 0, 1 ]
'toMat33_rotateVector': [ 0, 1, 0 ]
'toMat33_rotateVector2': [ 0, 0, 1 ]
'XYZeuler->quat': [ 0.2199, 0.1801, 0.3632, 0.8873 ]
'XYZeuler->mat->quat': [ 0.2199, 0.1801, 0.3632, 0.8873 ]
'XZYeuler->quat': [ 0.05213, 0.1801, 0.3632, 0.9126 ]
'XZYeuler->mat->quat': [ 0.05213, 0.1801, 0.3632, 0.9126 ]
'YXZeuler->quat': [ 0.2199, 0.1801, 0.2938, 0.9126 ]
'YXZeuler->mat->quat': [ 0.2199, 0.1801, 0.2938, 0.9126 ]
'YZXeuler->quat': [ 0.2199, 0.2794, 0.2938, 0.8873 ]
'YZXeuler->mat->quat': [ 0.2199, 0.2794, 0.2938, 0.8873 ]
'ZXYeuler->quat': [ 0.05213, 0.2794, 0.3632, 0.8873 ]
'ZXYeuler->mat->quat': [ 0.05213, 0.2794, 0.3632, 0.8873 ]
'ZYXeuler->quat': [ 0.05213, 0.2794, 0.2938, 0.9126 ]
'ZYXeuler->mat->quat': [ 0.05213, 0.2794, 0.2938, 0.9126 ]
'targetVector': [ 0.4082, -0.4082, 0.8165 ]
'setFrom2Vectors': [ 0, -0.4865, -0.2433, 0.8391 ]
'setFrom2Vectors_rotateVector': [ 0.4082, -0.4082, 0.8165 ]
'setFrom2Vectors_rotateVector2': [ -1, 0, 0 ]
'equal': [ 1 ]
'equal2': [ 0 ]
'equal3': [ 1 ]
'add': [ 2, 1, 4, 2 ]
'addInPlace': [ 3, 0, 5, 0 ]
'subtract': [ 0, 3, 2, 6 ]
'subtractInPlace': [ -1, 4, 1, 8 ]
'multiply': [ 7, -6, -5, -10 ]
'multiplyInPlace': [ -35, 10, -1, 12 ]
'multiplyScalar': [ 2, 4, 6, 8 ]
'multiplyScalarInPlace': [ 3, 6, 9, 12 ]
'divide': [ -11, -2, -7, -6 ]
'divideInPlace': [ 37, -6, 7, -4 ]
'divideScalar': [ 0.5000, 1, 1.500, 2 ]
'length': [ 3.775 ]
'lengthSquared': [ 14.25 ]
'unit': [ 0.2649, 0.5298, 0.7947, 0.1325 ]
'setUnit': [ -0.7442, 0.4961, -0.2481, -0.3721 ]
'dot': [ -0.1807 ]
'conjugate': [ -0.2649, -0.5298, -0.7947, 0.1325 ]
'inverse': [ -0.2649, -0.5298, -0.7947, 0.1325 ]
'getXaxis': [ -0.8246, 0.4912, 0.2807 ]
'getYaxis': [ 0.07018, -0.4035, 0.9123 ]
'getZaxis': [ 0.5614, 0.7719, 0.2982 ]
'alignWith': [ -0.2649, -0.5298, -0.7947, -0.1325 ]
'mirrorY': [ 0.1325, -0.7947, -0.5298, 0.2649 ]
'slerp 0': [ 0, 0, 1 ]
'slerp 0.25': [ 0.2440, -0.3333, 0.9107 ]
'slerp 0.5': [ 0.3333, -0.6667, 0.6667 ]
'slerp 0.75': [ 0.2440, -0.9107, 0.3333 ]
'slerp 1': [ 0, -1, 0 ]
'lerp 0': [ 0, 0, 1 ]
'lerp 0.25': [ 0.2308, -0.3077, 0.9231 ]
'lerp 0.5': [ 0.3333, -0.6667, 0.6667 ]
'lerp 0.75': [ 0.2308, -0.9231, 0.3077 ]
'lerp 1': [ 0, -1, 0 ]
'convertTests_originalQuat': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerXYZ->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerXYZ->M33->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerXZY->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerXZY->M33->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerYXZ->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerYXZ->M33->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerYZX->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerYZX->M33->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerZXY->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerZXY->M33->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerZYX->Q': [ 0.6838, -0.5698, 0.4558 ]
'convertTests_Q->EulerZYX->M33->Q': [ 0.6838, -0.5698, 0.4558 ]
