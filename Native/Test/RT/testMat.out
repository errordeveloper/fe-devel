****** Mat22 Tests ******
Math.Warning: Mat22.inverse: bad divisor: 0
Math.Warning: Mat22.divideScalar: bad divisor: 0
[FABRIC] [MT] Math.Warning: Mat22.inverse: bad divisor: 0
[FABRIC] [MT] Math.Warning: Mat22.divide: bad divisor: 0
'set': [ 1, 3, 4, 5 ]
'setNull': [ 0, 0, 0, 0 ]
'setIdentity': [ 1, 0, 0, 1 ]
'setDiagonal': [ 5, 0, 0, 5 ]
'setDiagonalVec': [ 1, 0, 0, 0 ]
'equal': [ 1 ]
'equal2': [ 0 ]
'equal3': [ 1 ]
'add': [ 1, 2, 5, 5 ]
'addInPlace': [ 1, 1, 6, 5 ]
'subtract': [ 1, 4, 3, 5 ]
'subtractInPlace': [ 1, 5, 2, 5 ]
'multiply': [ 0, -1, -1, 0 ]
'multiplyVector': [ 0, -1 ]
'multiplyInPlace': [ -4, -5, -1, -3 ]
'multiplyVector2': [ -4, -1 ]
'multiplyScalar': [ 2, 6, 8, 10 ]
'multiplyScalarInPlace': [ 3, 9, 12, 15 ]
'divideScalar': [ 0.5000, 1.500, 2, 2.500 ]
'divideScalarInPlace': [ 0.3333, 1, 1.333, 1.667 ]
'determinant': [ -5 ]
'adjoint': [ 5, -2, -5, 1 ]
'multByInverse': [ 1, 0, 0, 1 ]
'transpose': [ 1, 4, 3, 5 ]
****** Mat33 Tests ******
Math.Warning: Mat33.inverse: bad divisor: 0
Math.Warning: Mat33.divideScalar: bad divisor: 0
[FABRIC] [MT] Math.Warning: Mat33.inverse: bad divisor: 0
[FABRIC] [MT] Math.Warning: Mat33.divide: bad divisor: 0
'set': [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
'setNull': [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
'setIdentity': [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ]
'setDiagonal': [ 5, 0, 0, 0, 5, 0, 0, 0, 5 ]
'setDiagonalVec': [ 1, 0, 0, 0, 0, 0, 0, 0, 0 ]
'equal': [ 1 ]
'equal2': [ 0 ]
'equal3': [ 1 ]
'add': [ 1, 1, 3, 5, 5, 6, 7, 8, 10 ]
'addInPlace': [ 1, 0, 3, 6, 5, 6, 7, 8, 11 ]
'subtract': [ 1, 3, 3, 3, 5, 6, 7, 8, 8 ]
'subtractInPlace': [ 1, 4, 3, 2, 5, 6, 7, 8, 7 ]
'multiply': [ 0, -1, 0, -1, 0, 0, 0, 0, 1 ]
'multiplyVector': [ 0, -1, 0 ]
'multiplyInPlace': [ -4, -5, -6, -1, -2, -3, 7, 8, 9 ]
'multiplyVector2': [ -4, -1, 7 ]
'multiplyScalar': [ 2, 4, 6, 8, 10, 12, 14, 16, 18 ]
'multiplyScalarInPlace': [ 3, 6, 9, 12, 15, 18, 21, 24, 27 ]
'divideScalar': [ 0.5000, 1, 1.500, 2, 2.500, 3, 3.500, 4, 4.500 ]
'divideScalarInPlace': [ 0.3333, 0.6667, 1, 1.333, 1.667, 2, 2.333, 2.667, 3 ]
'determinant': [ 9 ]
'adjoint': [ 2, 14, -9, -8, -11, 9, 5, -1, 0 ]
'multByInverse': [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ]
'transpose': [ 1, 4, 7, 2, 5, 8, 3, 6, 9 ]
****** Mat44 Tests ******
Math.Warning: Mat44.inverse: bad divisor: 0
Math.Warning: Mat44.divideScalar: bad divisor: 0
[FABRIC] [MT] Math.Warning: Mat44.inverse: bad divisor: 0
[FABRIC] [MT] Math.Warning: Mat44.divide: bad divisor: 0
'set': [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]
'setNull': [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
'setIdentity': [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]
'setDiagonal': [ 5, 0, 0, 0, 0, 5, 0, 0, 0, 0, 5, 0, 0, 0, 0, 5 ]
'setDiagonalVec': [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
'equal': [ 1 ]
'equal2': [ 0 ]
'equal3': [ 1 ]
'add': [ 1, 1, 3, 4, 6, 6, 7, 8, 9, 10, 12, 12, 13, 14, 15, 17 ]
'addInPlace': [ 1, 0, 3, 4, 7, 6, 7, 8, 9, 10, 13, 12, 13, 14, 15, 18 ]
'subtract': [ 1, 3, 3, 4, 4, 6, 7, 8, 9, 10, 10, 12, 13, 14, 15, 15 ]
'subtractInPlace': [ 1, 4, 3, 4, 3, 6, 7, 8, 9, 10, 9, 12, 13, 14, 15, 14 ]
'multiply': [ 0, -1, 0, 0, -1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]
'multiplyVector': [ 0, -1, 0, 0 ]
'multiplyInPlace': [ -5, -6, -7, -8, -1, -2, -3, -4, 9, 10, 11, 12, 13, 14, 15, 16 ]
'multiplyVector2': [ -5, -1, 9, 13 ]
'multiplyScalar': [ 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 ]
'multiplyScalarInPlace': [ 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48 ]
'divideScalar': [ 0.5000, 1, 1.500, 2, 2.500, 3, 3.500, 4, 4.500, 5, 5.500, 6, 6.500, 7, 7.500, 8 ]
'divideScalarInPlace': [ 0.3333, 0.6667, 1, 1.333, 1.667, 2, 2.333, 2.667, 3, 3.333, 3.667, 4, 4.333, 4.667, 5, 5.333 ]
'determinant': [ 23 ]
'adjoint': [ -14, 54, -3, -20, 3, -51, -1, 24, -2, 11, 16, -16, 10, -9, -11, 11 ]
'multByInverse': [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]
'transpose': [ 1, 5, 9, 13, 2, 6, 10, 14, 3, 7, 11, 15, 4, 8, 12, 16 ]
'multiplyVec4': [ 18, 46, 74, 102 ]
'multiplyVec3': [ 0.1765, 0.4510, 0.7255 ]
'upperLeft': [ 1, 2, 3, 5, 6, 7, 9, 10, 11 ]
