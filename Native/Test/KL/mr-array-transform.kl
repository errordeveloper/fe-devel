/*
 *  Copyright 2010-2012 Fabric Engine Inc. All rights reserved.
 */

operator transform1(
  io Integer value
  )
{
  report("transform1: value=" + value);
  value *= 2;
}

operator transform2(
  io Integer value,
  Index index
  )
{
  report("transform2: value=" + value + " index=" + index);
  value *= 2;
}

operator transform3(
  io Integer value,
  Index index,
  Size count
  )
{
  report("transform3: value=" + value + " index=" + index + " count=" + count);
  value *= 2;
}

operator transform4(
  io Integer value,
  Index index,
  Size count,
  String shared
  )
{
  report("transform4: value=" + value + " index=" + index + " count=" + count + " shared=" + shared);
  value *= 2;
}

operator entry() {
  Integer va[];
  for (Integer i=0; i<10; ++i)
    va.push(i);

  ArrayProducer<Integer> cap = createConstArray(va);
  report("cap.getCount() = " + cap.getCount());

  ArrayProducer<Integer> am1 = createArrayTransform(cap, transform1);
  report(am1);
  report(am1.getCount());
  for (Index i=0; i<10; ++i)
    report(am1.produce(i));

  ArrayProducer<Integer> am2 = createArrayTransform(cap, transform2);
  report(am2);
  report(am2.getCount());
  for (Index i=0; i<10; ++i)
    report(am2.produce(i));

  ArrayProducer<Integer> am3 = createArrayTransform(cap, transform3);
  report(am3);
  report(am3.getCount());
  for (Index i=0; i<10; ++i)
    report(am3.produce(i));

  ArrayProducer<Integer> am4 = createArrayTransform(cap, transform4, createConstValue("hello"));
  report(am4);
  report(am4.getCount());
  for (Index i=0; i<10; ++i)
    report(am4.produce(i));
}
