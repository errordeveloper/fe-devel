struct Vec2 {
  Scalar x;  Scalar y;
};
struct Vec3 {
  Scalar x; Scalar y; Scalar z;
};

function FabricOBJDecode( Data objData, Size objDataSize, Boolean splitByObjects, Boolean splitByGroups, Boolean splitByMaterials, io Data parsedDataHandle );
function FabricOBJIsHandleValid( Data parsedDataHandle, io Boolean valid );
function FabricOBJFreeParsedData( io Data parsedDataHandle );
function FabricOBJHadErrors( Data parsedDataHandle, io Boolean hadErrors );
function FabricOBJGetErrors( Data parsedDataHandle, io String errors[] );
function FabricOBJHasTextureCoords( Data parsedDataHandle, io Boolean hasTextureCoords );
function FabricOBJGetMaterialLibraries( Data parsedDataHandle, io String errors[] );
function FabricOBJGetMaterialNames( Data parsedDataHandle, io String errors[] );
function FabricOBJGetNbEntities( Data parsedDataHandle, io Size nbPoints );
function FabricOBJGetEntityObjectName( Data parsedDataHandle, Integer entity /* -1: all */, io String name );
function FabricOBJGetEntityGroupName( Data parsedDataHandle, Integer entity /* -1: all */, io String name );
function FabricOBJGetEntityMaterialName( Data parsedDataHandle, Integer entity /* -1: all */, io String name );
function FabricOBJGetNbEntityPoints( Data parsedDataHandle, Integer entity /* -1: all */, io Size nbPoints );
function FabricOBJGetEntityPoints( Data parsedDataHandle, Integer entity /* -1: all */, io Vec3 points[] );
function FabricOBJGetEntityPointsSliced( Data parsedDataHandle, Integer entity /* -1: all */, io Vec3 points<> );
function FabricOBJGetEntityNormals( Data parsedDataHandle, Integer entity /* -1: all */, io Vec3 normals[] );
function FabricOBJGetEntityNormalsSliced( Data parsedDataHandle, Integer entity /* -1: all */, io Vec3 normals<> );
function FabricOBJGetEntityTextureCoords( Data parsedDataHandle, Integer entity /* -1: all */, io Vec2 texCoords[] );
function FabricOBJGetEntityTextureCoordsSliced( Data parsedDataHandle, Integer entity /* -1: all */, io Vec2 texCoords<> );
function FabricOBJGetNbEntityTriangles( Data parsedDataHandle, Integer entity /* -1: all */, io Size nbTriangles );
function FabricOBJGetEntityTriangleIndices( Data parsedDataHandle, Integer entity /* -1: all */, io Integer triangleIndices[] );
function FabricOBJGetEntityTriangleIndicesSliced( Data parsedDataHandle, Integer entity /* -1: all */, io Integer triangleIndices<> );
function FabricOBJGetEntityTriangleMaterialIndices( Data parsedDataHandle, Integer entity /* -1: all */, io Integer triangleIndices[] );
function FabricOBJGetEntityTriangleMaterialIndicesSliced( Data parsedDataHandle, Integer entity /* -1: all */, io Integer triangleIndices<> );
