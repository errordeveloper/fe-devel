struct OBJDataHandle {
  Data handle;
};

struct Vec2 {
  Scalar x;  Scalar y;
};
struct Vec3 {
  Scalar x; Scalar y; Scalar z;
};

function FabricOBJDecode( Data objData, Size objDataSize, Boolean splitByObjects, Boolean splitByGroups, Boolean splitByMaterials, io OBJDataHandle handle );
function FabricOBJOpenFileHandle( String fileHandle, Boolean splitByObjects, Boolean splitByGroups, Boolean splitByMaterials, io OBJDataHandle handle );
function FabricOBJIsHandleValid( OBJDataHandle handle, io Boolean valid );
function FabricOBJFreeParsedData( io OBJDataHandle handle );
function FabricOBJHadErrors( OBJDataHandle handle, io Boolean hadErrors );
function FabricOBJGetErrors( OBJDataHandle handle, io String errors[] );
function FabricOBJHasTextureCoords( OBJDataHandle handle, io Boolean hasTextureCoords );
function FabricOBJGetMaterialLibraries( OBJDataHandle handle, io String errors[] );
function FabricOBJGetMaterialNames( OBJDataHandle handle, io String errors[] );
function FabricOBJGetNbEntities( OBJDataHandle handle, io Size nbPoints );
function FabricOBJGetEntityObjectName( OBJDataHandle handle, Integer entity /* -1: all */, io String name );
function FabricOBJGetEntityGroupName( OBJDataHandle handle, Integer entity /* -1: all */, io String name );
function FabricOBJGetEntityMaterialName( OBJDataHandle handle, Integer entity /* -1: all */, io String name );
function FabricOBJGetNbEntityPoints( OBJDataHandle handle, Integer entity /* -1: all */, io Size nbPoints );
function FabricOBJGetEntityPoints( OBJDataHandle handle, Integer entity /* -1: all */, io Vec3 points[] );
function FabricOBJGetEntityPointsSliced( OBJDataHandle handle, Integer entity /* -1: all */, io Vec3 points<> );
function FabricOBJGetEntityNormals( OBJDataHandle handle, Integer entity /* -1: all */, io Vec3 normals[] );
function FabricOBJGetEntityNormalsSliced( OBJDataHandle handle, Integer entity /* -1: all */, io Vec3 normals<> );
function FabricOBJGetEntityTextureCoords( OBJDataHandle handle, Integer entity /* -1: all */, io Vec2 texCoords[] );
function FabricOBJGetEntityTextureCoordsSliced( OBJDataHandle handle, Integer entity /* -1: all */, io Vec2 texCoords<> );
function FabricOBJGetNbEntityTriangles( OBJDataHandle handle, Integer entity /* -1: all */, io Size nbTriangles );
function FabricOBJGetEntityTriangleIndices( OBJDataHandle handle, Integer entity /* -1: all */, io Integer triangleIndices[] );
function FabricOBJGetEntityTriangleIndicesSliced( OBJDataHandle handle, Integer entity /* -1: all */, io Integer triangleIndices<> );
function FabricOBJGetEntityTriangleMaterialIndices( OBJDataHandle handle, Integer entity /* -1: all */, io Integer triangleIndices[] );
function FabricOBJGetEntityTriangleMaterialIndicesSliced( OBJDataHandle handle, Integer entity /* -1: all */, io Integer triangleIndices<> );

function ~OBJDataHandle() = "FabricOBJFreeParsedData";
