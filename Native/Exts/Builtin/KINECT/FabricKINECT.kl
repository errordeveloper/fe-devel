//===================================================================================
// structs
struct RGBA {
  Byte r;
  Byte g;
  Byte b;
  Byte a;
};

struct Vec3 {
  Scalar x;
  Scalar y;
  Scalar z;
};

struct Quat {
  Vec3 v;
  Scalar w;
};

struct Xfo {
  Quat ori;
  Vec3 tr;
  Vec3 sc;
};

struct KinectCamera {
  Data localData;
  Boolean initiated;
  Integer tiltAngle;
  Boolean supportsColor;
  Boolean supportsDepth;
  Boolean supportsSkeleton;
  RGBA colorData[];
  Integer depthData[];
  Integer playerData[];
  Xfo skeletonData[];
};

//===================================================================================
// extension's functions
function FabricKINECT_Init(io KinectCamera camera);
function FabricKINECT_Shutdown(io KinectCamera camera);
function FabricKINECT_Tilt(io KinectCamera camera, io Integer angle);
function FabricKINECT_GetColorPixels(io KinectCamera camera);
function FabricKINECT_GetDepthPixels(io KinectCamera camera);

//===================================================================================
// camera definition
function ~KinectCamera() = "FabricKINECT_Shutdown";

function KinectCamera.init(io Boolean result) {
  if(!this.initiated) {
    FabricKINECT_Init(this);
    result = true;
  }
  else
    result = false;
}

function KinectCamera.tilt(io Integer angle, io Boolean result) {
  if(this.tiltAngle != angle) {
    FabricKINECT_Tilt(this,angle);
    result = (this.tiltAngle == angle);
  }
  else
    result = false;
}

function KinectCamera.getColorPixels() {
  FabricKINECT_GetColorPixels(this);
}

function KinectCamera.getDepthPixels() {
  FabricKINECT_GetDepthPixels(this);
}