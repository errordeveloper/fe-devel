#
# Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
#

import os
Import('buildOS', 'buildArch')

if buildOS != 'Windows' or buildArch != 'x86_64':
  Import( 'baseEnv', 'archDistDir', 'FABRIC_VERSION', 'fabricNodePackage', 'fabricNodeAddOn', 'nodeModuleReadMe', 'nodeModuleLicense', 'browserExtFiles', 'fileSystemExtFiles', 'generateDistZip' )

  nodePackageName = "FabricEngine-NodeModule-"+buildOS+"-"+buildArch+"-"+FABRIC_VERSION

  nodePackageDir = archDistDir.Dir(nodePackageName)
  nodeModuleDir = nodePackageDir.Dir('node_modules').Dir('Fabric')

  installerFiles = []

  installerFiles.append( baseEnv.Command(
    nodeModuleDir.File('package.json'),
    fabricNodePackage,
    [ Copy( '$TARGET', '$SOURCE' ) ]
  ) )

  installerFiles.append( baseEnv.Command(
    nodeModuleDir.File('Fabric.node'),
    fabricNodeAddOn,
    [ Copy( '$TARGET', '$SOURCE' ) ]
  ) )

  installerFiles.append( baseEnv.Command(
    nodePackageDir.File('README.txt'),
    nodeModuleReadMe,
    [ Copy( '$TARGET', '$SOURCE' ) ]
  ) )

  installerFiles.append( baseEnv.Command(
    nodePackageDir.File('LICENSE.txt'),
    nodeModuleLicense,
    [ Copy( '$TARGET', '$SOURCE' ) ]
  ) )

  installerFiles.append( Install(
    nodePackageDir.Dir('Exts'),
    [browserExtFiles, fileSystemExtFiles]
  ) )

  if buildOS == 'Windows':
    installerEnv = baseEnv.Clone()
    generateDistZip( installerEnv )
    installerEnv.Append( DISTZIP_ROOTDIR = nodePackageDir )
    nodeInstaller = installerEnv.DistZip(
      archDistDir.File( nodePackageName+".zip" ),
      installerFiles
    )
  else:
    nodeInstaller = baseEnv.Command(
      archDistDir.File(nodePackageName+".tar.bz2"),
      installerFiles,
      [
        [ "tar", "-C", archDistDir, "-jcf", "$TARGET", nodePackageName ]
      ]
    )
else:
  nodeInstaller = []

Alias( 'nodeInstaller', nodeInstaller )
Return( 'nodeInstaller' )
