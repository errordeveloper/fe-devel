
//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//

use RotationOrder, Mat33;

function Euler(in Vec3 angles) {
  this.x = angles.x;
  this.y = angles.y;
  this.z = angles.z;
  this.ro.setXYZ();
}

function Euler(in Vec3 angles, in RotationOrder order) {
  this.set(angles, order);
}

function Euler(in Scalar x, in Scalar y, in Scalar z) {
  this.set(x, y, z);
}

function Euler(in Scalar x, in Scalar y, in Scalar z, in RotationOrder order) {
  this.set(x, y, z, order);
}

function Euler.set(in Vec3 angles, in RotationOrder order) {
  this.x = angles.x;
  this.y = angles.y;
  this.z = angles.z;
  this.ro = order;
}

function Euler.set(in Scalar x, in Scalar y, in Scalar z) {
  this.x = x;
  this.y = y;
  this.z = z;
  this.ro.setXYZ();
}

function Euler.set(in Scalar x, in Scalar y, in Scalar z, in RotationOrder order) {
  this.x = x;
  this.y = y;
  this.z = z;
  this.ro = order;
}

function Euler.setAngles(in Vec3 v) {
  this.x = v.x;
  this.y = v.y;
  this.z = v.z;
}

function Vec3 Euler.getAngles() {
  return Vec3(this.x, this.y, this.z);
}

function Boolean Euler.equal (in Euler other) {
  return this.x == other.x && this.y == other.y && this.z == other.z && this.ro.order == other.ro.order;
}

function Boolean Euler.almostEqual(in Euler other, in Scalar precision) {
  return
      (abs(this.x - other.x) < precision) &&
      (abs(this.y - other.y) < precision) &&
      (abs(this.z - other.z) < precision) &&
      (this.ro.order == other.ro.order);
}

function Mat33 Euler.toMat33() {
  Scalar Cx = cos(this.x), Sx = sin(this.x);
  Scalar Cy = cos(this.y), Sy = sin(this.y);
  Scalar Cz = cos(this.z), Sz = sin(this.z);

  Mat33 Rx( 1.0, 0.0, 0.0,
            0.0,  Cx, -Sx,
            0.0,  Sx,  Cx);

  Mat33 Ry(  Cy,  0.0,  Sy,
            0.0,  1.0, 0.0,
            -Sy,  0.0,  Cy);

  Mat33 Rz(  Cz,  -Sz,  0.0,
             Sz,   Cz,  0.0,
            0.0,  0.0,  1.0);

  Mat33 result;

  if (this.ro.isXYZ())
    result = Rx * Ry * Rz;
  else if (this.ro.isYZX())
    result = Ry * Rz * Rx;
  else if (this.ro.isZXY())
    result = Rz * Rx * Ry;
  else if (this.ro.isXZY())
    result = Rx * Rz * Ry;
  else if (this.ro.isZYX())
    result = Rz * Ry * Rx;
  else if (this.ro.isYXZ())
    result = Ry * Rx * Rz;

  return result;
}
