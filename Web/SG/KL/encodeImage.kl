/*
 *  Copyright 2010-2012 Fabric Engine Inc. All rights reserved.
 */

use FabricPNG;

function encodeImageLDRInternal(
  in Size imageWidth,
  in Size imageHeight,
  in Data imageLDRData,
  io FabricResource resource
) {
  resource.data.resize(0);
  String ext = resource.extension ? resource.extension : resource.mimeType;
  if( !ext )
    ext = 'png';
  switch (ext) {
    case'png':
    case'image/png':
      //report("imageWidth: "+imageWidth+", imageHeight: "+imageHeight+", imageLDR.size(): "+imageLDR.dataSize());
      FabricPNGEncode(imageWidth, imageHeight, imageLDRData, resource.data);
      resource.extension = 'png';
      resource.mimeType = 'image/png';
      break;
    default:
      report("Error, encoding is not supported for image type " + ext);
  }
}

operator encodeImageLDR(
  io Size imageWidth,
  io Size imageHeight,
  io RGBA imageLDR[],
  io FabricResource resource
) {
  encodeImageLDRInternal(imageWidth, imageHeight, imageLDR.data(), resource);
}

operator encodeImageLDRSliced(
  io Size imageWidth,
  io Size imageHeight,
  io RGBA imageLDR<>,
  io FabricResource resource
) {
  encodeImageLDRInternal(imageWidth, imageHeight, imageLDR.data(), resource);
}
