//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//

use DATA_TYPE;
use OGLBuffer, OGLShaderProgram;

// These must be defined in the preprocessor definitions prior to compilation.
// #define DATA_TYPE Vec3

operator genVBO(
  io DATA_TYPE bufferData[],
  io OGLBuffer buffer
) {
  buffer.genBuffer(bufferData.data(), bufferData.dataSize(), bufferData.size());
}

operator genAndBindVBO(
  io OGLShaderProgram shaderProgram,
  io DATA_TYPE bufferData<>,
  io OGLBuffer buffer
) {
  shaderProgram.genAndBindBuffer(bufferData.data(), bufferData.dataSize(), bufferData.size(), buffer);
}

operator bindVBO(
  io OGLShaderProgram shaderProgram,
  io OGLBuffer buffer
) {
  Integer location = shaderProgram.getAttributeLocation(buffer.attributeID);
//  report("bindVBO  " + buffer.name + ":" + buffer.bufferID + " location:" + location);
  if(location!=-1){
    buffer.bindBuffer(location);
    return;
  }
}
