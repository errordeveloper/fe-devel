//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//


use Xfo;
use Bone;
use BezierKeyframe;
use SolverHelperFunctions;


operator solveArmRig(
  io Xfo pose[],
  io Bone bones[],
  
  io Integer boneIndices[],
  io Integer wristOffsetXfoId,
  io Integer handControlXfoId,
  io Integer ikBlendId,

  io PoseVariables poseVariables
) {
  Scalar ikBlend = poseVariables.scalarValues[ikBlendId];
  if (ikBlend > 0.0) {
    Xfo fkPose[];
    fkPose.resize(boneIndices.size());
    for (Integer i = 0; i < boneIndices.size(); i++) {
      fkPose[i] = pose[boneIndices[i]];
    }

    Xfo targetXfo;
    targetXfo = poseVariables.xfoValues[wristOffsetXfoId] * poseVariables.xfoValues[handControlXfoId];

    Scalar maxLineLength = bones[boneIndices[1]].length + bones[boneIndices[2]].length;
    Vec2 maxLineLengthSoftening(maxLineLength * 0.1, maxLineLength * 0.1);
    applyFishingRod(
      pose[boneIndices[0]],
      bones[boneIndices[0]].length,
      targetXfo,
      Vec3(1.0, 0.0, 0.0),

      0.0,
      Vec2(0.0, 0.0),
      maxLineLength,
      maxLineLengthSoftening
    );

    pose[boneIndices[1]].tr = pose[boneIndices[0]].transformVector(Vec3(bones[boneIndices[0]].length, 0.0, 0.0));

    Integer ikboneIndices[];
    for (Integer i = 1; i < boneIndices.size() - 1; i++) {
      ikboneIndices.push(boneIndices[i]);
    }
    solveNCFIK(pose, bones, ikboneIndices, targetXfo);

    Integer wristIndex = boneIndices[boneIndices.size() - 1];
    Integer forearmIndex = boneIndices[boneIndices.size() - 2];
    pose[wristIndex].tr = pose[forearmIndex].transformVector(Vec3(bones[forearmIndex].length, 0.0, 0.0));
    pose[wristIndex].ori = targetXfo.ori;

    for (Integer i = 0; i < boneIndices.size(); i++) {
      pose[boneIndices[i]].ori = fkPose[i].ori.sphericalLinearInterpolate(pose[boneIndices[i]].ori, ikBlend);
      if (i > 0) {
        pose[boneIndices[i]].tr = pose[boneIndices[i - 1]].transformVector(bones[boneIndices[i]].referenceLocalPose.tr);
      }
    }
  }

}
