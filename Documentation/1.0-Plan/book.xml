<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book [
<!ENTITY % allent SYSTEM "w3centities-f.ent">
%allent;
]>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook" version="5.0">
  <info>
    <title>Fabric Documentation Plan for 1.0</title>

    <copyright>
      <year>2012</year>
      <holder>Fabric Engine Inc.</holder>
    </copyright>
    
    <author>
      <personname>
        <firstname>Peter</firstname>
        <surname>Zion</surname>
      </personname>
      <affiliation>
        <orgname>Fabric Engine Inc.</orgname>
        <address>
          <email>peter.zion@fabric-engine.com</email>
        </address>
      </affiliation>
    </author>
  </info>
  
  <section>
    <title>Introduction</title>
      
    <para>
      One of the most important parts of releasing a development platform is to make it as easy as possible for users to learn how to most effectively use the platform.  This document outlines a documentation plan that specifies what and in what form this documentation should be, and why.
    </para>
  </section>
  
  <section>
    <title>Documentation Types</title>
    
    <para>
      The different types of documentation types that are useful for different purposes.  For version 1.0, we will use these different types depending on the goal of the documentation.
    </para>
  
    <para>
      There are two broad categories of documentation: Fabric-contributed and user-contributed.
    </para>
    
    <section>
      <title>Fabric-Contributed Documentation</title>
      
      <para>
        Fabric-contributed documentation constitutes the documentation that we officially release for people to use a training and reference materials.  Some of the characteristics of this documentation are:
      </para>
      
      <itemizedlist>
        <listitem><para>The documentation is tied to a particular release of Fabric and versioned along with that release.</para></listitem>
        <listitem><para>The documentation should be presentable: free of errors and reasonably polished.</para></listitem>
        <listitem><para>The documentation must be easy to find and consume.</para></listitem>
        <listitem><para>The documentation must be at a fixed URL and indexed by search engines such as Google.</para></listitem>
      </itemizedlist>
      
      <para>The different types of Fabric-contributed documentation we will use for 1.0 are:</para>
      
      <glosslist>
        <glossentry>
          <glossterm>Tutorials</glossterm>
          <glossdef>
            <para>
              A tutorial is a step-by-step guide that walks a user through the process of learning how to use some part of Fabric.  An example tutorial might be a tutorial showing you how to create a Fabric application that creates a simple 3D scene in the browser.  Tutorials are sometimes referred to as HOWTOs especially in geeky circles.
            </para>
            <para>
              Tutorials must be presented in a way that makes it easy for people to copy and paste example command and code onto their computers so they can run through the tutorial on their own.  Tutorials are generally best presented as web pages but can also be presented as .PDF documents.  Additionally, a narrated version of the tutorial can be available as a "screencast" video for people to watch, but there must be a clear link back to the tutorial from which the examples can by copied and pasted.
            </para>
          </glossdef>
        </glossentry>
        <glossentry>
          <glossterm>Presentations</glossterm>
          <glossdef>
            <para>
              A presentation is a high-level overview of some part of the technology that conveys understanding of the different aspects and key points about the technology without drilling down into details.  An example presentation might be one that explains the different I/O architectures available to Fabric programmers and when each should be used.
            </para>
            <para>
              Presentations should generally be presented as slides which could be supported by someone presenting them in person, but there must be enough information on the slides for them to be consumable on their own.  The presentation must be downloadable as a PDF file but can also be made available in .PPT form or on services such as SlideShare.  Finally, a narrated version of the presentation can be made available as a video for people to watch.
            </para>
          </glossdef>
        </glossentry>
        <glossentry>
          <glossterm>Guides and References</glossterm>
          <glossdef>
            <para>
              Guides and references are comprehensive documentation that can are structured as books, and include tables of contents, indexes, and so on.  The distinction between a guide and a reference is the style of the book: a guide builds out the information from the bottom-up, while a reference builds out the information from the top-down.  In general, you must have a guide and you may have a reference, since a reference won't make any sense to someone who doesn't already have a good understanding of the technology as a whole.
            </para>
            <para>
              Guides and references must be written in DocBook 5 and must be made available as HTML pages on the fabric-engine.com website.  They must also be made available for download as standalone .PDF documents, and may also be available in e-reader formats as well, such as ePub and .mobi.
            </para>
          </glossdef>
        </glossentry>
      </glosslist>
    </section>
    
    <section>
      <title>User-Contributed Documentation</title>
      
      <para>
        Part of the strength of a developer community is found in its user-contributed documentation.  Even with excellent Fabric-contributed documentation, user-contributed documentation will be necessary for a variety of reasons:
      </para>
      
      <itemizedlist>
        <listitem><para>Users will contribute their own examples and HOWTOs that will help other users.</para></listitem>
        <listitem><para>Documentation is never complete and has omissions.</para></listitem>
        <listitem><para>Users will discover external resources that will help in understanding Fabric.</para></listitem>
      </itemizedlist>
      
      <para>
        User-contributed documentation must be presented as a wiki.  Use of the wiki must be restricted to users who have authenticated using a verified email address.  Users must have the option to make wiki changes using a "screen name" rather than their real name.
      </para>
      
      <para>
        The wiki must be seeded with content that is structured the same way as the Fabric-contributed documentation.  Furthermore, the wiki should initially contain links to the Fabric-contributed documentation but should not contain verbatim copies of that documentation.
      </para>
      
      <para>
        In its initial state, the wiki should function as a good place to go to to find documentation in all forms.  The expectation is that users will add their own content to the wiki augments the Fabric documentation.
      </para>
      
      <para>
        From time to time, a Fabric employee should read through the entire wiki and be sure to incorporate into the Fabric-contributed documentation any corrections or omissions.
      </para>
    </section>
  </section>
  
  <section>
    <title>What to Document</title>
    
    <para>
      As usual, we divide what to document into the broad categories of the core and the scene graph.
    </para>
    
    <section>
      <title>Core</title>
      
      <para>
        The core itself breaks down along conceptual lines as: overview, registered types, KL, dependency graph, map-reduce, extensions, and integrating Fabric and OpenGL.
      </para>
      
      <section>
        <title>Overview</title>
        
        <itemizedlist>
          <listitem>
            <para>A <emphasis>Fabric Core Overview</emphasis> presentation that shows at a high level how the different parts of the Fabric core work together.</para>
          </listitem>
        </itemizedlist>
      </section>
      
      <section>
        <title>Registered Types</title>
        
        <itemizedlist>
          <listitem>
            <para>A <emphasis>Registered Types Overview</emphasis> presentation that explains the basic concepts behind registered types such as the basic Fabric types, type composition and type reflection in the scripting language.</para>
          </listitem>
          <listitem>
            <para>A <emphasis>Registered Types Programming Guide</emphasis> that explains how to do everything you need to with the Fabric registered types system from within all the scripting languages as well as from within KL.</para>
          </listitem>
        </itemizedlist>
      </section>
            
      <section>
        <title>KL</title>
        
        <itemizedlist>
          <listitem>
            <para>A <emphasis>KL Overview</emphasis> presentation that explains the basic concepts behind KL: language characteristics, features and non-features.</para>
          </listitem>
          <listitem>
            <para>A <emphasis>KL Programming Guide</emphasis> that completely covers all aspects of the KL programming language.</para>
          </listitem>
        </itemizedlist>
      </section>
            
      <section>
        <title>Dependency Graph</title>
        
        <itemizedlist>
          <listitem>
            <para>A <emphasis>Dependency Graph Overview</emphasis> presentation that explains the basic concepts behind the Fabric dependency graph: nodes, members, events, event handlers, operators and dependency.</para>
          </listitem>
          <listitem>
            <para>A <emphasis>Dependency Graph Tutorial</emphasis> that walks the user through a simple example of programming the dependency graph to do a computation from JavaScript.</para>
          </listitem>
          <listitem>
            <para>A <emphasis>Dependency Graph Programming Guide</emphasis> that completely covers all aspects of using the dependency graph from all supported scripting languages.</para>
          </listitem>
        </itemizedlist>
      </section>
            
      <section>
        <title>Map-Reduce</title>
        
        <itemizedlist>
          <listitem>
            <para>A <emphasis>Map-Reduce Overview</emphasis> presentation that explains the basic concepts behind the Fabric map-reduce programming model: producers, value producers, array producers, and reductions.</para>
          </listitem>
          <listitem>
            <para>A <emphasis>Map-Reduce Tutorial</emphasis> that walks the user through a simple example of using the map-reduce programming model to do a computation from JavaScript.</para>
          </listitem>
          <listitem>
            <para>A <emphasis>Map-Reduce Graph Programming Guide</emphasis> that completely covers all aspects of using the map-reduce programming model from all supported scripting languages as well as from KL.</para>
          </listitem>
        </itemizedlist>
      </section>
            
      <section>
        <title>Extensions</title>
        
        <itemizedlist>
          <listitem>
            <para>An <emphasis>Extension Authoring Guide</emphasis> that completely covers all aspects of writing Fabric extensions and interfacing them with third-party libraries.</para>
          </listitem>
        </itemizedlist>
      </section>
            
      <section>
        <title>Fabric with OpenGL</title>
        
        <itemizedlist>
          <listitem>
            <para>A guide <emphasis>Interfacing Fabric and OpenGL</emphasis> that explains in detail how to drive OpenGL from within Fabric.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
    
    <section>
      <title>Scene Graph</title>
      
      <para>TBD</para>
    </section>
  </section> 
</article>
